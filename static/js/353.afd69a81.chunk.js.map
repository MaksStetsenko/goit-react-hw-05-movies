{"version":3,"file":"static/js/353.afd69a81.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","Page/Movie/Movie.jsx","components/FilmItem/FilmItem.styled.js","components/FilmItem/FilmItem.jsx","components/FilmList/FilmList.jsx","utils/apiServices.js","utils/options.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const InputStyled = styled.input`\n  padding: ${p => p.theme.space[2]}px;\n`;\n\nexport const ButtonStyled = styled.button`\n  padding: ${p => p.theme.space[2]}px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FormStyled, InputStyled, ButtonStyled } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  return (\n    <FormStyled onSubmit={onSubmit} autoComplete=\"off\">\n      <InputStyled type=\"text\" name=\"Search\"></InputStyled>\n      <ButtonStyled type=\"submit\">Search</ButtonStyled>\n    </FormStyled>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport SearchForm from 'components/SearchForm';\nimport FilmList from '../../components/FilmList';\n\nimport { Container } from 'components/Common/Common.styled';\n\nimport { movieAPI } from 'utils/apiServices';\n\nconst Api = new movieAPI();\n\nconst Movie = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    console.log(e.target.elements.Search.value);\n    const searchQuery = e.target.elements.Search.value.trim().toLowerCase();\n\n    setSearchParams(searchQuery !== '' ? { query: searchQuery } : {});\n\n    e.target.reset();\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    Api.searchMovie(query).then(setSearchResult);\n  }, [query]);\n\n  return (\n    <Container>\n      <h2>What we finded</h2>\n      <SearchForm onSubmit={handlerSubmit} />\n      {searchResult.length > 0 && <FilmList films={searchResult} />}\n    </Container>\n  );\n};\n\nexport default Movie;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const FilmLinkStyled = styled(Link)`\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.link};\n`;\n\nexport const FilmItemStyled = styled.li`\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[2]}px;\n  }\n`;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { FilmLinkStyled, FilmItemStyled } from './FilmItem.styled';\n\nconst FilmItem = ({ title, linkTo, linkFrom }) => {\n  return (\n    <FilmItemStyled>\n      <FilmLinkStyled to={linkTo} state={linkFrom}>\n        {title}\n      </FilmLinkStyled>\n    </FilmItemStyled>\n  );\n};\n\nFilmItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  linkTo: PropTypes.string,\n  linkFrom: PropTypes.shape({\n    from: PropTypes.shape({\n      pathname: PropTypes.string,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n      state: PropTypes.any,\n      key: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default FilmItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport FilmItem from '../FilmItem';\n\nconst FilmList = ({ films, path = '' }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films.map(({ id, title }) => {\n        return (\n          <FilmItem\n            key={id}\n            title={title}\n            linkTo={`${path}${id}`}\n            linkFrom={{ from: location }}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nFilmList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string,\n};\n\nexport default FilmList;\n","import axios from 'axios';\nimport { apiKey, baseURL, basePosterURL } from './options';\n\naxios.defaults.baseURL = baseURL;\n\nexport class movieAPI {\n  init = async () => {\n    await this.getTrending();\n  };\n\n  getTrendingMovies = async () => {\n    const responce = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n    const trending = await responce.data.results;\n    return await trending;\n  };\n\n  getMovie = async movieId => {\n    const movie = await axios.get(\n      `movie/${movieId}?api_key=${apiKey}&language=en-US`\n    );\n\n    const { genres, id, title, poster_path, vote_avarge, overview } =\n      await movie.data;\n    const posterPath = (await poster_path)\n      ? `${basePosterURL + poster_path}`\n      : 'https://via.placeholder.com/200x300';\n\n    return { genres, id, title, posterPath, vote_avarge, overview };\n  };\n\n  getActors = async movieId => {\n    const responce = await axios.get(\n      `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n    );\n\n    const cast = await responce.data.cast;\n\n    const actors = await cast.map(({ id, name, character, profile_path }) => {\n      const actorPhotoPath = profile_path\n        ? `${basePosterURL + profile_path}`\n        : 'https://via.placeholder.com/150x200';\n\n      return { id, name, character, actorPhotoPath };\n    });\n\n    return actors;\n  };\n\n  getReviews = async movieId => {\n    const responce = await axios.get(\n      `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n    );\n\n    return await responce.data.results;\n  };\n\n  searchMovie = async query => {\n    const responce = await axios.get(\n      `search/movie?api_key=${apiKey}&language=en-US&query=${query}`\n    );\n\n    return await responce.data.results;\n  };\n}\n","export const apiKey = '5e5dd262817c6929016a564b0a598843';\nexport const baseURL = 'https://api.themoviedb.org/3';\nexport const basePosterURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const renderMashineStatus = {\n  IDLE: 'idle',\n  EMPTY: 'empty',\n  SUCCESS: 'success',\n};\n"],"names":["FormStyled","styled","p","theme","space","InputStyled","ButtonStyled","onSubmit","autoComplete","type","name","Api","movieAPI","useState","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","query","get","useEffect","searchMovie","then","e","preventDefault","console","log","target","elements","Search","value","searchQuery","trim","toLowerCase","reset","length","FilmList","films","FilmLinkStyled","Link","fontSizes","m","colors","link","FilmItemStyled","title","linkTo","linkFrom","to","state","path","location","useLocation","map","id","from","axios","baseURL","init","getTrending","getTrendingMovies","apiKey","responce","data","results","trending","getMovie","movieId","movie","genres","poster_path","vote_avarge","overview","basePosterURL","posterPath","getActors","cast","character","profile_path","actorPhotoPath","actors","getReviews","renderMashineStatus","IDLE","EMPTY","SUCCESS"],"sourceRoot":""}