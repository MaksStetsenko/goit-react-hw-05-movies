{"version":3,"file":"static/js/883.5e7e5b19.chunk.js","mappings":"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","sources":["Page/MovieDetails/MovieDetails.styled.js","components/MovieGenres/MovieGenres.jsx","components/Card/Card.jsx","Page/MovieDetails/MovieDetails.jsx","utils/apiServices.js","utils/options.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLinkStyled = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 100px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px;\n  background-color: ${p => p.theme.colors.backButton};\n  color: ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.standart};\n  transition: ${p => p.theme.transitions};\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.hovered};\n    color: ${p => p.theme.colors.backButtonText};\n  }\n`;\n\nexport const AdditionalLinkStyled = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[4]}px;\n  background-color: ${p => p.theme.colors.backButton};\n  color: ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.standart};\n  transition: ${p => p.theme.transitions};\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.hovered};\n    color: ${p => p.theme.colors.backButtonText};\n  }\n  &.active {\n    background-color: ${p => p.theme.colors.active};\n    color: ${p => p.theme.colors.backButtonText};\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MovieGenres = ({ genres }) => {\n  if (!genres) return <div>We don`t know what genres have this film.</div>;\n  const movieGeners = genres.map(({ name }) => name).join(', ');\n\n  return <div>{movieGeners}</div>;\n};\n\nMovieGenres.propTypes = {\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default MovieGenres;\n","import React from 'react';\nimport { Box } from 'components/Box';\n\nimport PropTypes from 'prop-types';\nimport MovieGenres from 'components/MovieGenres';\nimport { Container } from 'components/Common/Common.styled';\n\nconst Card = ({\n  movieDetales: { genres, title, posterPath, vote_average, overview },\n}) => {\n  const userScore = vote_average\n    ? `${Math.round(vote_average * 10)}%`\n    : 'No users votes';\n\n  return (\n    <Box as=\"section\" mb={5} pb={4} boxShadow=\"toBottom\">\n      <Container>\n        <Box display=\"flex\" gridGap=\"20px\">\n          <Box\n            width=\"200px\"\n            height=\"300px\"\n            overflow=\"hidden\"\n            objectFit=\"cover\"\n            flex=\"0 0 auto\"\n            borderRadius=\"standart\"\n          >\n            <img src={posterPath} alt={title} />\n          </Box>\n          <Box>\n            <h2>{title}</h2>\n            <p>User score: {userScore}</p>\n\n            <h3>Overview</h3>\n            <div>{overview}</div>\n\n            <h4>Genres</h4>\n            <MovieGenres genres={genres} />\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nCard.propTypes = {\n  movieDetales: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    posterPath: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Card;\n","import { useState, useEffect, Suspense } from 'react';\nimport { movieAPI } from 'utils/apiServices';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { Box } from 'components/Box';\nimport { Container } from 'components/Common/Common.styled';\nimport { BackLinkStyled, AdditionalLinkStyled } from './MovieDetails.styled';\n\nimport Card from '../../components/Card';\n\nconst Api = new movieAPI();\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetales, setMovieDetales] = useState({});\n  const location = useLocation();\n  const backLink = location.state?.from ?? '';\n  const isMovieDetalesIsEmpty = !Object.keys(movieDetales).length;\n\n  useEffect(() => {\n    const fetchMovie = async id => {\n      setMovieDetales(await Api.getMovie(id));\n    };\n    fetchMovie(movieId);\n  }, [movieId]);\n\n  if (isMovieDetalesIsEmpty) return;\n\n  return (\n    <main>\n      <Container>\n        <BackLinkStyled to={backLink}>Back</BackLinkStyled>\n      </Container>\n\n      <Card movieDetales={movieDetales} />\n\n      <Box as=\"section\" pb={3}>\n        <Container>\n          <h3>Additional info</h3>\n          <Box as=\"ul\" display=\"flex\" gridGap={2}>\n            <Box as=\"li\">\n              <AdditionalLinkStyled to=\"cast\" state={{ from: backLink }}>\n                Cast\n              </AdditionalLinkStyled>\n            </Box>\n            <Box as=\"li\">\n              <AdditionalLinkStyled to=\"reviews\" state={{ from: backLink }}>\n                Reviews\n              </AdditionalLinkStyled>\n            </Box>\n          </Box>\n\n          <Suspense fallback={<div>Loading</div>}>\n            <Outlet />\n          </Suspense>\n        </Container>\n      </Box>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { apiKey, baseURL, basePosterURL } from './options';\n\naxios.defaults.baseURL = baseURL;\n\nexport class movieAPI {\n  init = async () => {\n    await this.getTrending();\n  };\n\n  getTrendingMovies = async () => {\n    const responce = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n    const trending = await responce.data.results;\n    return await trending;\n  };\n\n  getMovie = async movieId => {\n    const movie = await axios.get(\n      `movie/${movieId}?api_key=${apiKey}&language=en-US`\n    );\n\n    const { genres, id, title, poster_path, vote_avarge, overview } =\n      await movie.data;\n    const posterPath = (await poster_path)\n      ? `${basePosterURL + poster_path}`\n      : 'https://via.placeholder.com/200x300';\n\n    return { genres, id, title, posterPath, vote_avarge, overview };\n  };\n\n  getActors = async movieId => {\n    const responce = await axios.get(\n      `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n    );\n\n    const cast = await responce.data.cast;\n\n    const actors = await cast.map(({ id, name, character, profile_path }) => {\n      const actorPhotoPath = profile_path\n        ? `${basePosterURL + profile_path}`\n        : 'https://via.placeholder.com/150x200';\n\n      return { id, name, character, actorPhotoPath };\n    });\n\n    return actors;\n  };\n\n  getReviews = async movieId => {\n    const responce = await axios.get(\n      `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n    );\n\n    return await responce.data.results;\n  };\n\n  searchMovie = async query => {\n    const responce = await axios.get(\n      `search/movie?api_key=${apiKey}&language=en-US&query=${query}`\n    );\n\n    return await responce.data.results;\n  };\n}\n","export const apiKey = '5e5dd262817c6929016a564b0a598843';\nexport const baseURL = 'https://api.themoviedb.org/3';\nexport const basePosterURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const renderMashineStatus = {\n  IDLE: 'idle',\n  EMPTY: 'empty',\n  SUCCESS: 'success',\n};\n"],"names":["BackLinkStyled","styled","NavLink","p","theme","space","colors","backButton","primary","radii","standart","transitions","hovered","backButtonText","AdditionalLinkStyled","active","genres","movieGeners","map","name","join","movieDetales","title","posterPath","vote_average","overview","userScore","Math","round","Box","as","mb","pb","boxShadow","display","gridGap","width","height","overflow","objectFit","flex","borderRadius","src","alt","Api","movieAPI","movieId","useParams","useState","setMovieDetales","backLink","useLocation","state","from","isMovieDetalesIsEmpty","Object","keys","length","useEffect","fetchMovie","id","getMovie","to","Suspense","fallback","axios","baseURL","init","getTrending","getTrendingMovies","apiKey","responce","data","results","trending","movie","poster_path","vote_avarge","basePosterURL","getActors","cast","character","profile_path","actorPhotoPath","actors","getReviews","searchMovie","query","renderMashineStatus","IDLE","EMPTY","SUCCESS"],"sourceRoot":""}