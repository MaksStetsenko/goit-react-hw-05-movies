{"version":3,"file":"static/js/394.5f6b5898.chunk.js","mappings":"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","sources":["Page/Home/Home.jsx","components/FilmItem/FilmItem.styled.js","components/FilmItem/FilmItem.jsx","components/FilmList/FilmList.jsx","utils/apiServices.js","utils/options.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport FilmList from '../../components/FilmList';\n\nimport { Container } from 'components/Common/Common.styled';\n\nimport { movieAPI } from 'utils/apiServices';\n\nconst Api = new movieAPI();\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchPopularMovies = async () => {\n      setPopularMovies(await Api.getTrendingMovies());\n    };\n    fetchPopularMovies();\n  }, []);\n\n  return (\n    <Container>\n      <h2>Today in trends</h2>\n      <FilmList films={popularMovies} path=\"movies/\" />\n    </Container>\n  );\n};\n\nexport default Home;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const FilmLinkStyled = styled(NavLink)`\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.link};\n`;\n\nexport const FilmItemStyled = styled.li`\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[2]}px;\n  }\n`;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { FilmLinkStyled, FilmItemStyled } from './FilmItem.styled';\n\nconst FilmItem = ({ title, linkTo, linkFrom }) => {\n  return (\n    <FilmItemStyled>\n      <FilmLinkStyled to={linkTo} state={linkFrom}>\n        {title}\n      </FilmLinkStyled>\n    </FilmItemStyled>\n  );\n};\n\nFilmItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  linkTo: PropTypes.string,\n  linkFrom: PropTypes.shape({\n    from: PropTypes.shape({\n      pathname: PropTypes.string,\n      search: PropTypes.string,\n      hash: PropTypes.string,\n      state: PropTypes.any,\n      key: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default FilmItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport FilmItem from '../FilmItem';\n\nconst FilmList = ({ films, path = '' }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films.map(({ id, title }) => {\n        return (\n          <FilmItem\n            key={id}\n            title={title}\n            linkTo={`${path}${id}`}\n            linkFrom={{ from: location }}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nFilmList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string,\n};\n\nexport default FilmList;\n","import axios from 'axios';\nimport { apiKey, baseURL, basePosterURL } from './options';\n\naxios.defaults.baseURL = baseURL;\n\nexport class movieAPI {\n  init = async () => {\n    await this.getTrending();\n  };\n\n  getTrendingMovies = async () => {\n    const responce = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n    const trending = await responce.data.results;\n    return await trending;\n  };\n\n  getMovie = async movieId => {\n    const movie = await axios.get(\n      `movie/${movieId}?api_key=${apiKey}&language=en-US`\n    );\n\n    const { genres, id, title, poster_path, vote_avarge, overview } =\n      await movie.data;\n    const posterPath = (await poster_path)\n      ? `${basePosterURL + poster_path}`\n      : 'https://via.placeholder.com/200x300';\n\n    return { genres, id, title, posterPath, vote_avarge, overview };\n  };\n\n  getActors = async movieId => {\n    const responce = await axios.get(\n      `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n    );\n\n    const cast = await responce.data.cast;\n\n    const actors = await cast.map(({ id, name, character, profile_path }) => {\n      const actorPhotoPath = profile_path\n        ? `${basePosterURL + profile_path}`\n        : 'https://via.placeholder.com/150x200';\n\n      return { id, name, character, actorPhotoPath };\n    });\n\n    return actors;\n  };\n\n  getReviews = async movieId => {\n    const responce = await axios.get(\n      `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n    );\n\n    return await responce.data.results;\n  };\n\n  searchMovie = async query => {\n    const responce = await axios.get(\n      `search/movie?api_key=${apiKey}&language=en-US&query=${query}`\n    );\n\n    return await responce.data.results;\n  };\n}\n","export const apiKey = '5e5dd262817c6929016a564b0a598843';\nexport const baseURL = 'https://api.themoviedb.org/3';\nexport const basePosterURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const renderMashineStatus = {\n  IDLE: 'idle',\n  EMPTY: 'empty',\n  SUCCESS: 'success',\n};\n"],"names":["Api","movieAPI","useState","popularMovies","setPopularMovies","useEffect","fetchPopularMovies","getTrendingMovies","FilmList","films","path","FilmLinkStyled","styled","NavLink","p","theme","fontSizes","m","colors","link","FilmItemStyled","space","title","linkTo","linkFrom","to","state","location","useLocation","map","id","from","axios","baseURL","init","getTrending","apiKey","responce","data","results","trending","getMovie","movieId","movie","genres","poster_path","vote_avarge","overview","basePosterURL","posterPath","getActors","cast","name","character","profile_path","actorPhotoPath","actors","getReviews","searchMovie","query","renderMashineStatus","IDLE","EMPTY","SUCCESS"],"sourceRoot":""}